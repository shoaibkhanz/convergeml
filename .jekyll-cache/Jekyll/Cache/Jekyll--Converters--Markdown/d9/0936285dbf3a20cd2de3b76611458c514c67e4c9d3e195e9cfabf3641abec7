I"çB<p><span class="newthought"><span style="color:#868686;"> Prophet</span></span>  is a time-series forecasting library by <span style="color:#ea9808;"> facebook</span> and itâ€™s available in Python and in R. It is simple to use and requires very little classical time-series experience, for e.g. ARIMA, SARIMA etc. Thus, you can start <span style="color:#868686;">building models quickly</span>, <span style="color:#868686;">get good results</span> and <span style="color:#868686;">become effective</span> in no time. Considering all prophet has become a popular library for time-series applications.
<!--more--></p>

<p>A model in prophet is defined by the following equation. 
This form is called general additive models, since we adding results from each of the components to get our predction.</p>

\[\hat Y_t  = g_t + s_t + h_t + x_t + \epsilon\]

<p>\(\hat Y_t\)  is the predictions.</p>

<p>\(g_t\) stands for growth model i.e. trend (logistic/linear)</p>

<p>\(s_t\) model seasonality using fourier series</p>

<p>\(h_t\) modeling holiday effects</p>

<p>\(x_t\) any extra regressors</p>

<p>\(\epsilon\) normally distributed errors</p>

<h2 id="what-is-this-post-about-">What is this post about ?</h2>
<p>In this first post on prophet ,my objective is simply to get you started with <span style="color:#ea9808;"> forecasting</span>. I aim to cover the very basic to get you off the ground. In this series of posts, the aim is to cover all the features of prophet in parts. We will explore under-the-hood mathematics that define prophet and tinker with how its applied in code. For now, I will make sure that after reading this you know enough to get your first time-series model up and running.</p>

<h2 id="dataset">Dataset</h2>
<p><span style="color:#ea9808;">Time-series data is where the values are recorded sequentially with respect to time</span>, for e.g. temperature data or health tracker data etc. For this post, we will model maximum temperature data for Sydney,Australia between the years 2013-2017 and we want forecast it another year. This data has a strong seasonal pattern with a weak trend (Fig1). If at this point you are wondering what do we mean by seasonality and trend then you must read <a href="https://otexts.com/fpp3/tspatterns.html">time-series patterns by rob hyndman</a> before reading any further.</p>

<h2 id="setting-up-to-explore-and-forecast">Setting up to explore and forecast</h2>

<p>We want to set up our environement with libraries that we would need for this forecasting exercise.
So, we install the necessary packages like below.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Importing the libraries
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span> <span class="c1">#for data manipulation
</span><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span> <span class="c1">#for plotting
</span><span class="kn">from</span> <span class="nn">fbprophet</span> <span class="kn">import</span> <span class="n">Prophet</span> <span class="c1">#for forecasting
</span>
</code></pre></div></div>

<p>We then read our data which is stored as a csv.
This data contains around 24 variables but we are interested in 2 variables <span style="color:#E6E6FA;">MaxTemp</span> since its the target and the <span style="color:#FF00FF;">Date</span> variable as itâ€™s the primary time sequence. Prophet requires the date variable to be set as a <span style="color:#FF00FF;">datetime</span> object and so we must convert it so. However, the interesting thing here is that we must name our date variable as <span style="color:#FF00FF;">ds</span> and the target variable as <span style="color:#E6E6FA;">y</span>, this is how prophet expects  them to be.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># reading a csv
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'../datasets/ausraindata.csv'</span><span class="p">)</span>
<span class="c1"># converting the string to datetime object
</span><span class="n">df</span><span class="p">[</span><span class="s">'ds'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'Date'</span><span class="p">])</span>
<span class="c1"># creating a new variable y 
# i.e. target variable, same as MaxTemp
# If you wanted to, you could rename it as well.
</span><span class="n">df</span><span class="p">[</span><span class="s">'y'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'MaxTemp'</span><span class="p">]</span>
</code></pre></div></div>

<p>The data contains temperature values for many locations across Australia, We are going to filter, select on Sydney and extract data from 2013 onwards.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># filtering the data by 2 conditions
</span><span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">df</span><span class="p">[</span><span class="s">'Location'</span><span class="p">]</span><span class="o">==</span><span class="s">'Sydney'</span><span class="p">)</span> <span class="o">&amp;</span> 
<span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'ds'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">year</span> <span class="o">&gt;=</span><span class="mi">2013</span><span class="p">),:]</span>
<span class="c1"># selecting the required variables
</span><span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,[</span><span class="s">'ds'</span><span class="p">,</span><span class="s">'y'</span><span class="p">]]</span>

</code></pre></div></div>

<p>As we feel the need to plot the time-series to really understand how the maximum temperature (measured in celsius degrees) has been across these years. We observe that it has peaks and valleys which we shoud expect as the temperature drops during winters and increases back up during summers. Thus, itâ€™s definitely seasonal and you should expect the model to detect this pattern.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#plotting the time-series
</span><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'ds'</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">'y'</span><span class="p">])</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Max Temperature in Sydney from 2013-2017'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>
<figure class="fullwidth"><img src="/assets/img/fb_prophet_11.svg" /><figcaption>Fig1: Plotting daily time-series of Max Temperature in Sydney,Australia</figcaption></figure>

<h2 id="fitting-a-prophet-model">Fitting a Prophet model</h2>

<p>We have the data ready to model with only 2 variables i.e. ds and y, this is sufficient to build our very basic prophet model.
The first step is to instantiate the model by calling Prophet class and define seasonality. <label for="1" class="margin-toggle sidenote-number"></label><input type="checkbox" id="1" class="margin-toggle" /><span class="sidenote">although we are just defining seasonality there are many default options that get chosen for us. for e.g. by default seasonality mode is always <code class="highlighter-rouge">additive</code> but we could change it to multiplicative if required. </span></p>

<p>After creating the m1 object we fit it to the data. Once, we have completed this step sucessfully, we must create a forecasting dataframe with future dates using <code class="highlighter-rouge">make_future_dataframe</code> method. We use <code class="highlighter-rouge">periods</code> to define the length of the forecasting dates and them simply predict. Now the forecast1 dataframe contains train and test data along with the forecast values called <code class="highlighter-rouge">yhat</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># training a prophet model 
</span><span class="n">m1</span> <span class="o">=</span>  <span class="n">Prophet</span><span class="p">(</span><span class="n">daily_seasonality</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> 
              <span class="n">weekly_seasonality</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
              <span class="n">yearly_seasonality</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">m1</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="n">future1</span> <span class="o">=</span> <span class="n">m1</span><span class="p">.</span><span class="n">make_future_dataframe</span><span class="p">(</span><span class="n">periods</span><span class="o">=</span><span class="mi">365</span><span class="p">)</span>
<span class="n">forecast1</span> <span class="o">=</span> <span class="n">m1</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">future1</span><span class="p">)</span>
<span class="n">forecast1</span><span class="p">.</span><span class="n">tail</span><span class="p">()</span>

</code></pre></div></div>

<p>forecast1 contains the following data and for now without going into too much detail in each one of them,
we must care about the following variables.</p>

<p>ds,trend,yearly,weekly and yhat</p>

<table>
  <thead>
    <tr>
      <th>ds</th>
      <th>trend</th>
      <th>yhat_lower</th>
      <th>yhat_upper</th>
      <th>trend_lower</th>
      <th>trend_upper</th>
      <th>additive_terms</th>
      <th>additive_terms_lower</th>
      <th>additive_terms_upper</th>
      <th>weekly</th>
      <th>weekly_lower</th>
      <th>weekly_upper</th>
      <th>yearly</th>
      <th>yearly_lower</th>
      <th>yearly_upper</th>
      <th>multiplicative_terms</th>
      <th>multiplicative_terms_lower</th>
      <th>multiplicative_terms_upper</th>
      <th>yhat</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2018-06-21</td>
      <td>24.032494</td>
      <td>14.843615</td>
      <td>23.077360</td>
      <td>23.957479</td>
      <td>24.105033</td>
      <td>-5.063215</td>
      <td>-5.063215</td>
      <td>-5.063215</td>
      <td>0.156514</td>
      <td>0.156514</td>
      <td>0.156514</td>
      <td>-5.219729</td>
      <td>-5.219729</td>
      <td>-5.219729</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>18.969280</td>
    </tr>
    <tr>
      <td>2018-06-22</td>
      <td>24.032998</td>
      <td>14.692531</td>
      <td>22.382954</td>
      <td>23.957705</td>
      <td>24.106094</td>
      <td>-5.281766</td>
      <td>-5.281766</td>
      <td>-5.281766</td>
      <td>0.007727</td>
      <td>0.007727</td>
      <td>0.007727</td>
      <td>-5.289494</td>
      <td>-5.289494</td>
      <td>-5.289494</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>18.751232</td>
    </tr>
    <tr>
      <td>2018-06-23</td>
      <td>24.033502</td>
      <td>14.554238</td>
      <td>22.553681</td>
      <td>23.957940</td>
      <td>24.107150</td>
      <td>-5.415719</td>
      <td>-5.415719</td>
      <td>-5.415719</td>
      <td>-0.059232</td>
      <td>-0.059232</td>
      <td>-0.059232</td>
      <td>-5.356488</td>
      <td>-5.356488</td>
      <td>-5.356488</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>18.617783</td>
    </tr>
    <tr>
      <td>2018-06-24</td>
      <td>24.034006</td>
      <td>14.820403</td>
      <td>22.546792</td>
      <td>23.958175</td>
      <td>24.108178</td>
      <td>-5.539141</td>
      <td>-5.539141</td>
      <td>-5.539141</td>
      <td>-0.119039</td>
      <td>-0.119039</td>
      <td>-0.119039</td>
      <td>-5.420102</td>
      <td>-5.420102</td>
      <td>-5.420102</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>18.494865</td>
    </tr>
    <tr>
      <td>2018-06-25</td>
      <td>24.034510</td>
      <td>14.415740</td>
      <td>22.616535</td>
      <td>23.958410</td>
      <td>24.109152</td>
      <td>-5.504221</td>
      <td>-5.504221</td>
      <td>-5.504221</td>
      <td>-0.024526</td>
      <td>-0.024526</td>
      <td>-0.024526</td>
      <td>-5.479695</td>
      <td>-5.479695</td>
      <td>-5.479695</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>18.530289</td>
    </tr>
  </tbody>
</table>

<h2 id="predictions-trend-and-seasonality">Predictions, Trend and Seasonality</h2>

<p>Prophet provides some useful functions to plot data. there are 2 backends avaiable <code class="highlighter-rouge">plotly</code> and <code class="highlighter-rouge">matplotlib</code>. We use matplotlib to plot the predictions. The function plots 95% confidence intervals as well. The predicitons are plotted as a line and the actuals as points. You could easily plot it yourself if you plotted the <code class="highlighter-rouge">yhat</code> from the <code class="highlighter-rouge">forecast1</code> dataframe.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># plots the predicitons
</span><span class="n">m1</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">forecast1</span><span class="p">)</span>

</code></pre></div></div>
<figure class="fullwidth"><img src="/assets/img/fb_prophet_12.svg" /><figcaption>Fig2: Plotting predictions</figcaption></figure>

<p>If we now wanted to plot trend and seasonality that out model leanred from the data we could easily do so by calling the <code class="highlighter-rouge">plot_components</code> method. The trend and seasonality plotted here is additive in nature. Interestingly, due to the location of australia the weather is very different compared to other parts of the world. We see in the yearly seasonality graph that july is the coldest while december is the hottest <label for="2" class="margin-toggle sidenote-number"></label><input type="checkbox" id="2" class="margin-toggle" /><span class="sidenote">This is also apparent if we compare yearly seaosnality with the Fig1 </span>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># plots the trend and seasonality
</span><span class="n">m1</span><span class="p">.</span><span class="n">plot_components</span><span class="p">(</span><span class="n">forecast1</span><span class="p">)</span>

</code></pre></div></div>
<figure class="fullwidth"><img src="/assets/img/fb_prophet_13.svg" /><figcaption>Fig3: Plotting Trend and Seasonality (weekly &amp; yearly)</figcaption></figure>

<h2 id="key-takeaways">Key Takeaways</h2>

<p>I hope after reading this post you are confident to run your basic prophet model and make forecasts about them.
Now there is a lot that I havenâ€™t covered here for e.g. what are changepoints ? , what do we mean by logistic and linear trend ?
how is seasonality calculated (fourier series) ? , how do you make your forecasts better ? time-series cross validation and performance metrics etc.</p>

<p>As I publish my other posts in this series I will deep dive into them. My goal for this one was just get you started so that you dont feel overwhelmed with the features. Once again, all the code is stored <a href="https://github.com/shoaibkhanz/fbprophet_case_studies/tree/master/Part1">here</a>, there is also a utils file in the project that change the appeareance of the charts.</p>

<p>Let me know in the comments, if you found this post helpful or you find yourself full of doubts.</p>
:ET